"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class RegisterValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            username: Validator_1.schema.string({ trim: true }, [
                Validator_1.rules.maxLength(50),
                Validator_1.rules.minLength(5),
                Validator_1.rules.regex(/^[a-zA-Z0-9-_]+$/),
            ]),
            email: Validator_1.schema.string({ trim: true }, [Validator_1.rules.unique({ table: 'usuarios', column: 'email' })]),
            password: Validator_1.schema.string({}, [Validator_1.rules.minLength(8)])
        });
        this.messages = {
            unique: 'Ya existe el email',
            maxLength: 'Te has pasado del limite',
            minLength: 'Como minimo se requiere 8 caracteres en la contrase√±a'
        };
    }
}
exports.default = RegisterValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVnaXN0ZXJWYWxpZGF0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJSZWdpc3RlclZhbGlkYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJFQUEwRDtBQUcxRCxNQUFxQixpQkFBaUI7SUFDcEMsWUFBc0IsR0FBd0I7UUFBeEIsUUFBRyxHQUFILEdBQUcsQ0FBcUI7UUFxQnZDLFdBQU0sR0FBRyxrQkFBTSxDQUFDLE1BQU0sQ0FBQztZQUM1QixRQUFRLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFDLEVBQUU7Z0JBQ3JDLGlCQUFLLENBQUMsU0FBUyxDQUFDLEVBQUUsQ0FBQztnQkFDbkIsaUJBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO2dCQUNsQixpQkFBSyxDQUFDLEtBQUssQ0FBQyxrQkFBa0IsQ0FBQzthQUNoQyxDQUFDO1lBQ0YsS0FBSyxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQyxDQUFDLENBQUM7WUFDNUYsUUFBUSxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxDQUFDLGlCQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDbEQsQ0FBQyxDQUFBO1FBYU0sYUFBUSxHQUFHO1lBQ2pCLE1BQU0sRUFBRSxvQkFBb0I7WUFDNUIsU0FBUyxFQUFFLDBCQUEwQjtZQUNyQyxTQUFTLEVBQUUsdURBQXVEO1NBQ25FLENBQUE7SUE5Q2dELENBQUM7Q0ErQ25EO0FBaERELG9DQWdEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNjaGVtYSwgcnVsZXMgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1ZhbGlkYXRvcidcclxuaW1wb3J0IHR5cGUgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZ2lzdGVyVmFsaWRhdG9ye1xyXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjdHg6IEh0dHBDb250ZXh0Q29udHJhY3QpIHt9XHJcblxyXG4gIC8qXHJcbiAgICogRGVmaW5lIHNjaGVtYSB0byB2YWxpZGF0ZSB0aGUgXCJzaGFwZVwiLCBcInR5cGVcIiwgXCJmb3JtYXR0aW5nXCIgYW5kIFwiaW50ZWdyaXR5XCIgb2YgZGF0YS5cclxuICAgKlxyXG4gICAqIEZvciBleGFtcGxlOlxyXG4gICAqIDEuIFRoZSB1c2VybmFtZSBtdXN0IGJlIG9mIGRhdGEgdHlwZSBzdHJpbmcuIEJ1dCB0aGVuIGFsc28sIGl0IHNob3VsZFxyXG4gICAqICAgIG5vdCBjb250YWluIHNwZWNpYWwgY2hhcmFjdGVycyBvciBudW1iZXJzLlxyXG4gICAqICAgIGBgYFxyXG4gICAqICAgICBzY2hlbWEuc3RyaW5nKHt9LCBbIHJ1bGVzLmFscGhhKCkgXSlcclxuICAgKiAgICBgYGBcclxuICAgKlxyXG4gICAqIDIuIFRoZSBlbWFpbCBtdXN0IGJlIG9mIGRhdGEgdHlwZSBzdHJpbmcsIGZvcm1hdHRlZCBhcyBhIHZhbGlkXHJcbiAgICogICAgZW1haWwuIEJ1dCBhbHNvLCBub3QgdXNlZCBieSBhbnkgb3RoZXIgdXNlci5cclxuICAgKiAgICBgYGBcclxuICAgKiAgICAgc2NoZW1hLnN0cmluZyh7fSwgW1xyXG4gICAqICAgICAgIHJ1bGVzLmVtYWlsKCksXHJcbiAgICogICAgICAgcnVsZXMudW5pcXVlKHsgdGFibGU6ICd1c2VycycsIGNvbHVtbjogJ2VtYWlsJyB9KSxcclxuICAgKiAgICAgXSlcclxuICAgKiAgICBgYGBcclxuICAgKi9cclxuICBwdWJsaWMgc2NoZW1hID0gc2NoZW1hLmNyZWF0ZSh7XHJcbiAgICB1c2VybmFtZTogc2NoZW1hLnN0cmluZyh7IHRyaW06IHRydWV9LCBbXHJcbiAgICAgIHJ1bGVzLm1heExlbmd0aCg1MCksXHJcbiAgICAgIHJ1bGVzLm1pbkxlbmd0aCg1KSxcclxuICAgICAgcnVsZXMucmVnZXgoL15bYS16QS1aMC05LV9dKyQvKSxcclxuICAgIF0pLFxyXG4gICAgZW1haWw6IHNjaGVtYS5zdHJpbmcoeyB0cmltOiB0cnVlIH0sIFtydWxlcy51bmlxdWUoeyB0YWJsZTogJ3VzdWFyaW9zJywgY29sdW1uOiAnZW1haWwnIH0pXSksXHJcbiAgICBwYXNzd29yZDogc2NoZW1hLnN0cmluZyh7fSwgW3J1bGVzLm1pbkxlbmd0aCg4KV0pXHJcbiAgfSlcclxuXHJcbiAgLyoqXHJcbiAgICogQ3VzdG9tIG1lc3NhZ2VzIGZvciB2YWxpZGF0aW9uIGZhaWx1cmVzLiBZb3UgY2FuIG1ha2UgdXNlIG9mIGRvdCBub3RhdGlvbiBgKC4pYFxyXG4gICAqIGZvciB0YXJnZXRpbmcgbmVzdGVkIGZpZWxkcyBhbmQgYXJyYXkgZXhwcmVzc2lvbnMgYCgqKWAgZm9yIHRhcmdldGluZyBhbGxcclxuICAgKiBjaGlsZHJlbiBvZiBhbiBhcnJheS4gRm9yIGV4YW1wbGU6XHJcbiAgICpcclxuICAgKiB7XHJcbiAgICogICAncHJvZmlsZS51c2VybmFtZS5yZXF1aXJlZCc6ICdVc2VybmFtZSBpcyByZXF1aXJlZCcsXHJcbiAgICogICAnc2NvcmVzLioubnVtYmVyJzogJ0RlZmluZSBzY29yZXMgYXMgdmFsaWQgbnVtYmVycydcclxuICAgKiB9XHJcbiAgICpcclxuICAgKi9cclxuICAgcHVibGljIG1lc3NhZ2VzID0ge1xyXG4gICAgdW5pcXVlOiAnWWEgZXhpc3RlIGVsIGVtYWlsJyxcclxuICAgIG1heExlbmd0aDogJ1RlIGhhcyBwYXNhZG8gZGVsIGxpbWl0ZScsXHJcbiAgICBtaW5MZW5ndGg6ICdDb21vIG1pbmltbyBzZSByZXF1aWVyZSA4IGNhcmFjdGVyZXMgZW4gbGEgY29udHJhc2XDsWEnXHJcbiAgfVxyXG59XHJcbiJdfQ==