"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Gas_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/Gas"));
const mongoose_1 = __importDefault(require("mongoose"));
class DatosGasesController {
    async DatosGasGrafica() {
        await mongoose_1.default.connect('mongodb+srv://admin:12345@sandbox.qlfli.mongodb.net/Sensores?retryWrites=true&w=majority');
        const buscar = await Gas_1.default.GasModelo.find({}, { "gas": 1, "_id": 0 }).sort({ $natural: -1 }).limit(10);
        return buscar;
    }
    async DatosGas() {
        await mongoose_1.default.connect('mongodb+srv://admin:12345@sandbox.qlfli.mongodb.net/Sensores?retryWrites=true&w=majority');
        const buscar = await Gas_1.default.GasModelo.find({}, { "gas": 1, "fecha": 1, "_id": 0 }).sort({ $natural: -1 }).limit(10);
        return buscar;
    }
    async insertarGas({ request, response }) {
        await mongoose_1.default.connect('mongodb+srv://admin:12345@sandbox.qlfli.mongodb.net/Sensores?retryWrites=true&w=majority');
        const gas = request.input('gas');
        const fecha = new Date();
        const crear = new Gas_1.default.GasModelo({
            gas: gas,
            fecha: fecha
        });
        await crear.save();
        return response.json(crear);
    }
}
exports.default = DatosGasesController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRGF0b3NHYXNlc0NvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJEYXRvc0dhc2VzQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLCtFQUF1QztBQUN2Qyx3REFBK0I7QUFFL0IsTUFBcUIsb0JBQW9CO0lBRTlCLEtBQUssQ0FBQyxlQUFlO1FBQ3hCLE1BQU0sa0JBQVEsQ0FBQyxPQUFPLENBQUMsMEZBQTBGLENBQUMsQ0FBQTtRQUNsSCxNQUFNLE1BQU0sR0FBRSxNQUFNLGFBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsS0FBSyxFQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDakcsT0FBTyxNQUFNLENBQUE7SUFDakIsQ0FBQztJQUVNLEtBQUssQ0FBQyxRQUFRO1FBQ25CLE1BQU0sa0JBQVEsQ0FBQyxPQUFPLENBQUMsMEZBQTBGLENBQUMsQ0FBQTtRQUNsSCxNQUFNLE1BQU0sR0FBRSxNQUFNLGFBQVMsQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBQyxFQUFDLEtBQUssRUFBQyxDQUFDLEVBQUMsT0FBTyxFQUFDLENBQUMsRUFBQyxLQUFLLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUMzRyxPQUFPLE1BQU0sQ0FBQTtJQUNmLENBQUM7SUFFTSxLQUFLLENBQUMsV0FBVyxDQUFDLEVBQUMsT0FBTyxFQUFDLFFBQVEsRUFBQztRQUN4QyxNQUFNLGtCQUFRLENBQUMsT0FBTyxDQUFDLDBGQUEwRixDQUFDLENBQUE7UUFFakgsTUFBTSxHQUFHLEdBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQTtRQUM5QixNQUFNLEtBQUssR0FBQyxJQUFJLElBQUksRUFBRSxDQUFBO1FBRXRCLE1BQU0sS0FBSyxHQUFHLElBQUksYUFBUyxDQUFDLFNBQVMsQ0FBRTtZQUNyQyxHQUFHLEVBQUUsR0FBRztZQUNSLEtBQUssRUFBQyxLQUFLO1NBQ1osQ0FBQyxDQUFBO1FBRUYsTUFBTSxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUE7UUFDbEIsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO0lBQy9CLENBQUM7Q0FDSjtBQTVCRCx1Q0E0QkMiLCJzb3VyY2VzQ29udGVudCI6WyIvL2ltcG9ydCB0eXBlIHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHQnXHJcbmltcG9ydCBHYXNNb2RlbG8gZnJvbSAnQXBwL01vZGVscy9HYXMnO1xyXG5pbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBEYXRvc0dhc2VzQ29udHJvbGxlciB7XHJcblxyXG4gICAgcHVibGljIGFzeW5jIERhdG9zR2FzR3JhZmljYSgpe1xyXG4gICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vYWRtaW46MTIzNDVAc2FuZGJveC5xbGZsaS5tb25nb2RiLm5ldC9TZW5zb3Jlcz9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHknKVxyXG4gICAgICAgIGNvbnN0IGJ1c2Nhcj0gYXdhaXQgR2FzTW9kZWxvLkdhc01vZGVsby5maW5kKHt9LHtcImdhc1wiOjEsXCJfaWRcIjowfSkuc29ydCh7JG5hdHVyYWw6LTF9KS5saW1pdCgxMCk7XHJcbiAgICAgICAgcmV0dXJuIGJ1c2NhclxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBhc3luYyBEYXRvc0dhcygpe1xyXG4gICAgICBhd2FpdCBtb25nb29zZS5jb25uZWN0KCdtb25nb2RiK3NydjovL2FkbWluOjEyMzQ1QHNhbmRib3gucWxmbGkubW9uZ29kYi5uZXQvU2Vuc29yZXM/cmV0cnlXcml0ZXM9dHJ1ZSZ3PW1ham9yaXR5JylcclxuICAgICAgY29uc3QgYnVzY2FyPSBhd2FpdCBHYXNNb2RlbG8uR2FzTW9kZWxvLmZpbmQoe30se1wiZ2FzXCI6MSxcImZlY2hhXCI6MSxcIl9pZFwiOjB9KS5zb3J0KHskbmF0dXJhbDotMX0pLmxpbWl0KDEwKTtcclxuICAgICAgcmV0dXJuIGJ1c2NhclxyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwdWJsaWMgYXN5bmMgaW5zZXJ0YXJHYXMoe3JlcXVlc3QscmVzcG9uc2V9KXtcclxuICAgICAgIGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QoJ21vbmdvZGIrc3J2Oi8vYWRtaW46MTIzNDVAc2FuZGJveC5xbGZsaS5tb25nb2RiLm5ldC9TZW5zb3Jlcz9yZXRyeVdyaXRlcz10cnVlJnc9bWFqb3JpdHknKVxyXG5cclxuICAgICAgICBjb25zdCBnYXM9cmVxdWVzdC5pbnB1dCgnZ2FzJylcclxuICAgICAgICBjb25zdCBmZWNoYT1uZXcgRGF0ZSgpXHJcbiAgICBcclxuICAgICAgICBjb25zdCBjcmVhciA9IG5ldyBHYXNNb2RlbG8uR2FzTW9kZWxvICh7XHJcbiAgICAgICAgICBnYXM6IGdhcyxcclxuICAgICAgICAgIGZlY2hhOmZlY2hhXHJcbiAgICAgICAgfSlcclxuICAgIFxyXG4gICAgICAgIGF3YWl0IGNyZWFyLnNhdmUoKVxyXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKGNyZWFyKVxyXG4gICAgfVxyXG59XHJcbiJdfQ==